<style>
  .living-web-page { display: flex; flex-direction: column; height: 100vh; }
  .living-web-container { flex: 1; display: flex; flex-direction: column; min-height: 600px; }
  .living-web-content { flex: 1; display: flex; overflow: hidden; }
  .living-web-library { width: 200px; background: #E8E8E8; border-right: 2px solid #000; overflow-y: auto; padding: 10px; }
  .living-web-canvas { flex: 1; background: #F8F8F8; border: 2px solid #000; position: relative; min-height: 500px; overflow: hidden; }
  #xyflow-container { width: 100%; height: 100%; min-height: 500px; position: relative; background: #FAFAFA; overflow: hidden; }
  .flow-canvas { position: absolute; top: 0; left: 0; right: 0; bottom: 0; width: 100%; height: 100%; }
</style>

<style>
  /* Base node styling - HyperCard aesthetic (React Flow compatibility) */
  .react-flow__node {
    border: 2px solid #000 !important;
    border-radius: 0 !important;
    padding: 8px 12px !important;
    min-width: 140px !important;
    max-width: 160px !important;
    box-shadow: 3px 3px 0px rgba(0,0,0,0.4) !important;
    background: #E8E8E8 !important;
    font-family: Monaco, 'Courier New', monospace !important;
    font-size: 11px !important;
    text-align: center !important;
    cursor: move !important;
  }

  /* Hover state - deeper shadow, thicker border */
  .react-flow__node:hover {
    border: 3px solid #000 !important;
    box-shadow: 4px 4px 0px rgba(0,0,0,0.5) !important;
    background: #F0F0F0 !important;
  }

  /* Selected state */
  .react-flow__node.selected {
    border: 3px solid #000 !important;
    box-shadow: 4px 4px 0px rgba(0,0,0,0.6) !important;
    background: #FFF !important;
  }

  /* Icon styling */
  .node-icon {
    font-size: 28px !important;
    line-height: 1 !important;
    margin-bottom: 4px !important;
    display: block !important;
  }

  /* Name styling */
  .node-name {
    font-weight: bold !important;
    font-size: 11px !important;
    color: #000 !important;
    line-height: 1.3 !important;
    word-wrap: break-word !important;
  }

  /* Category-specific backgrounds (greyscale only) */
  .node-food { background: #E8E8E8 !important; }
  .node-water { background: #D0D0D0 !important; }
  .node-waste { background: #BABABA !important; }
  .node-energy { background: #F0F0F0 !important; }
  .node-processing { background: #C8C8C8 !important; }
  .node-storage { background: #DCDCDC !important; }

  /* Remove XyFlow default styles that conflict */
  .react-flow__node-default {
    padding: 0 !important;
    border-radius: 0 !important;
  }

  /* Handle styling (connection points) */
  .react-flow__handle {
    width: 8px !important;
    height: 8px !important;
    border: 1px solid #000 !important;
    background: #FFF !important;
    border-radius: 0 !important;
  }

  .react-flow__handle:hover {
    background: #000 !important;
  }

  /* Edge/connection styling */
  .react-flow__edge-path {
    stroke: #000 !important;
    stroke-width: 2px !important;
  }

  .react-flow__edge.selected .react-flow__edge-path {
    stroke-width: 3px !important;
  }

  /* Background styling */
  .react-flow__background {
    background: #F8F8F8 !important;
  }

  /* Minimap (if you add it later) */
  .react-flow__minimap {
    border: 2px solid #000 !important;
    border-radius: 0 !important;
  }
</style>
<style>
  /* HyperCard-style node visuals */
  .flow-node {
    border: 2px solid #000;
    border-radius: 0;
    padding: 12px;
    min-width: 140px;
    box-shadow: 2px 2px 0px rgba(0,0,0,0.3);
    background: #E8E8E8;
    font-family: Monaco, monospace;
    font-size: 11px;
    text-align: center;
  }
  .flow-node:hover {
    border: 3px solid #000;
    box-shadow: 3px 3px 0px rgba(0,0,0,0.5);
    cursor: pointer;
  }
  .node-icon { font-size: 24px; margin-bottom: 4px; }
  .node-name { font-weight: bold; font-size: 11px; color: #000; }
  /* Category-specific backgrounds */
  .node-food { background: #E8E8E8; }
  .node-water { background: #D0D0D0; }
  .node-waste { background: #B8B8B8; }
  .node-energy { background: #F0F0F0; }
  .node-processing { background: #C0C0C0; }
  .node-storage { background: #E0E0E0; }
  /* State indicators */
  .node-planned { border-style: dashed; }
  .node-problem { border-top: 3px solid #CC0000; }
</style>

<div class="living-web-page">
  <div class="mac-window living-web-container">
    <!-- Title Bar -->
    <div class="mac-title-bar">
      <div class="mac-title">Living Web</div>
    </div>

    <!-- Content: Two-panel layout -->
    <div class="living-web-content">
      <!-- Left Panel: Systems Library -->
      <div class="living-web-library">
        <div class="library-header">SYSTEMS LIBRARY</div>

        <!-- Projects by Category -->
        <%= for category <- ["food", "water", "waste", "energy"] do %>
          <% category_projects = Enum.filter(@projects, & &1.category == category) %>
          <%= if length(category_projects) > 0 do %>
            <div class="library-section">
              <div class="library-section-title"><%= String.upcase(category) %></div>
              <%= for project <- category_projects do %>
                <div 
                  class="library-item draggable-project-item" 
                  draggable="true" 
                  data-project-id={project.id}
                  data-project-name={project.name}
                >
                  <span class="library-icon">ðŸ“¦</span>
                  <span class="library-name"><%= project.name %></span>
                </div>
              <% end %>
            </div>
          <% end %>
        <% end %>

        <!-- MY SYSTEMS Section -->
        <div class="library-section">
          <div class="library-section-title">MY SYSTEMS</div>
          <div class="library-placeholder">(No composite systems yet)</div>
        </div>
      </div>

      <!-- Right Panel: Canvas -->
      <div class="living-web-canvas">
        <div
          id="xyflow-container"
          phx-hook="XyflowEditor"
          data-nodes={Jason.encode!(@nodes)}
          data-edges={Jason.encode!(@edges)}
          class="xyflow-editor"
          style="width: 100%; height: 100%; min-height: 500px; position: relative; background: #FAFAFA; background-image: radial-gradient(circle, #CCCCCC 1px, transparent 1px); background-size: 20px 20px;"
        >
          <!-- XyFlow editor will render here -->
        </div>
      </div>
    </div>
  </div>
</div>
